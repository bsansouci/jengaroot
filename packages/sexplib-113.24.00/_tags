<**/*.ml{,i}>: warn(-40), no_alias_deps
<**/*>: thread
# This prevents the implicit addition of -ppx options by ocamlfind
<**/*.ml{,i}>: predicate(ppx_driver)
<src/*.ml>: for-pack(Sexplib)
<num/lib/*.ml>: for-pack(Sexplib_num)
<unix/lib/*.ml>: for-pack(Sexplib_unix)
<src/pre_sexp.ml>: pp(cpp -undef -traditional -Isyntax -w)
# OASIS_START
# DO NOT EDIT (digest: d1691c6135ef6e5a8fa5e7c454631c67)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library sexplib
"src/sexplib.cmxs": use_sexplib
"src/conv.cmx": for-pack(Sexplib)
"src/conv_error.cmx": for-pack(Sexplib)
"src/exn_magic.cmx": for-pack(Sexplib)
"src/lexer.cmx": for-pack(Sexplib)
"src/macro.cmx": for-pack(Sexplib)
"src/parser.cmx": for-pack(Sexplib)
"src/parser_with_layout.cmx": for-pack(Sexplib)
"src/path.cmx": for-pack(Sexplib)
"src/pre_sexp.cmx": for-pack(Sexplib)
"src/sexp.cmx": for-pack(Sexplib)
"src/sexp_intf.cmx": for-pack(Sexplib)
"src/sexp_with_layout.cmx": for-pack(Sexplib)
"src/src_pos.cmx": for-pack(Sexplib)
"src/std.cmx": for-pack(Sexplib)
"src/type.cmx": for-pack(Sexplib)
"src/type_with_layout.cmx": for-pack(Sexplib)
<src/*.ml{,i,y}>: package(bigarray)
# Library sexplib_num
"num/lib/sexplib_num.cmxs": use_sexplib_num
"num/lib/sexplib_num_conv.cmx": for-pack(Sexplib_num)
"num/lib/std.cmx": for-pack(Sexplib_num)
<num/lib/*.ml{,i,y}>: package(bigarray)
<num/lib/*.ml{,i,y}>: package(num)
<num/lib/*.ml{,i,y}>: use_sexplib
# Library sexplib_unix
"unix/lib/sexplib_unix.cmxs": use_sexplib_unix
"unix/lib/sexplib_unix_conv.cmx": for-pack(Sexplib_unix)
<unix/lib/*.ml{,i,y}>: package(bigarray)
<unix/lib/*.ml{,i,y}>: package(unix)
<unix/lib/*.ml{,i,y}>: use_sexplib
# OASIS_STOP
